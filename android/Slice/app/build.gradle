apply plugin: 'com.android.application'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId rootProject.ext.appId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }


    lintOptions {
        warningsAsErrors true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlin_version}"
    implementation "androidx.appcompat:appcompat:${appcompat}"
    implementation "androidx.constraintlayout:constraintlayout:${constraint}"
    implementation "androidx.constraintlayout:constraintlayout-solver:${constraint}"
    implementation "androidx.lifecycle:lifecycle-extensions:${live}"
    implementation "androidx.lifecycle:lifecycle-common-java8:${live}"
    implementation "androidx.annotation:annotation:${annotation}"
    implementation "androidx.slice:slice-core:${slice}"
    implementation "androidx.slice:slice-builders-ktx:${slice}"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutine}"

    implementation "com.google.code.gson:gson:${gson}"
    implementation "com.squareup.retrofit2:retrofit:${retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit}"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:${retrofit_coroutine}"
    implementation "com.github.grapesnberries:curlloggerinterceptor:${curl}"

    implementation "com.github.bumptech.glide:glide:${glide}"
    annotationProcessor "com.github.bumptech.glide:compiler:${glide}"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
